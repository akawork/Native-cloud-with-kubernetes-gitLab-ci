image: docker:18.09.7

services:
  - docker:18.09.7-dind


variables:
  REPOSITORY_FRONTEND_SERVICE_URI: {$AWS_ACCOUNT_ID}.dkr.ecr.us-east-2.amazonaws.com/cloud-staging-demo-frontend-service
  REPOSITORY_PROD_FRONTEND_SERVICE_URI: {$AWS_ACCOUNT_ID}.dkr.ecr.us-east-2.amazonaws.com/cloud-prod-demo-frontend-service
  AWS_DEFAULT_OUTPUT: json
  AWS_REGION: us-east-2
  REPO_NAME: cloud-staging-demo-frontend-service
  REPO_NAME_PROD: cloud-prod-demo-frontend-service

before_script:
  - apk add --no-cache curl jq python py-pip bash
  - pip install awscli
  - echo === Login to Amazon ECR === 
  - aws --version
  
stages:
  - build
  - deploy to staging
  - push image to prod ecr
  - deploy to production

  
build frontend staging:
  stage: build
  script: 
    - $(aws ecr get-login --no-include-email --region us-east-2)
    - docker build . -t my-angular-app:latest
    - docker tag my-angular-app:latest $REPOSITORY_FRONTEND_SERVICE_URI:$CI_COMMIT_SHORT_SHA
    - docker push $REPOSITORY_FRONTEND_SERVICE_URI:$CI_COMMIT_SHORT_SHA
    #- docker tag my-angular-app:latest $REPOSITORY_FRONTEND_SERVICE_URI:latest
    #- docker push $REPOSITORY_FRONTEND_SERVICE_URI:latest
deploy staging latest version:
  stage: deploy to staging
  script:
    - chmod +x deployscript-stag.sh
    - aws sts get-caller-identity
    - echo 'Pulling image'
    - IMAGE_TAG=$(aws ecr describe-images --repository-name $REPO_NAME --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' --region us-east-2 --output text)
    - echo $IMAGE_TAG
    - ./deployscript-stag.sh $REPO_NAME $REPOSITORY_FRONTEND_SERVICE_URI $IMAGE_TAG
deploy staging specific version:
  stage: deploy to staging
  script:
    - chmod +x deployscript-stag.sh
    - aws sts get-caller-identity
    - echo $IMAGE_TAG
    - ./deployscript-stag.sh $REPO_NAME $REPOSITORY_FRONTEND_SERVICE_URI $IMAGE_TAG
  when: manual
push image to prod ecr:
  stage: push image to prod ecr
  script:
    - $(aws ecr get-login --no-include-email --region $AWS_REGION)
    - docker pull $REPOSITORY_FRONTEND_SERVICE_URI:$IMAGE_TAG
    - docker tag $REPOSITORY_FRONTEND_SERVICE_URI:$IMAGE_TAG $REPOSITORY_PROD_FRONTEND_SERVICE_URI:$IMAGE_TAG
    - docker push $REPOSITORY_PROD_FRONTEND_SERVICE_URI:$IMAGE_TAG
  when: manual
deploy to production:
  stage: deploy to production
  script:
    - chmod +x deployscript-prod.sh
    - aws sts get-caller-identity
    - echo $IMAGE_TAG
    - ./deployscript-prod.sh $REPO_NAME_PROD $REPOSITORY_PROD_FRONTEND_SERVICE_URI $IMAGE_TAG
  when: manual
